#include <iostream>
#include <cmath>


// K(s) = ae^bs
// Y(s) = bx + A    a = e^A

using namespace std;

int SLAU(double **matrica_a,  int n, double *massiv_b, double *x)
{
int i,j,k,r;
double c,M,s;
float max;
double **a, *b;
a=new double *[n];
for(i=0;i<n;i++)
	a[i]=new double[n];
b=new double [n];
for(i=0;i<n;i++)
	for(j=0;j<n;j++)
		a[i][j]=matrica_a[i][j];
for(i=0;i<n;i++)
	b[i]=massiv_b[i];
for(k=0;k<n;k++)
{
	max= abs(a[k][k]);
	r=k;
	for(i=k+1;i<n;i++)
		if (abs(a[i][k])>max)
		{
			max=abs(a[i][k]);
			r=i;
		}
	for(j=0;j<n;j++)
	{
		c=a[k][j];
		a[k][j]=a[r][j];
		a[r][j]=c;
	}
	c=b[k];
	b[k]=b[r];
	b[r]=c;
	for(i=k+1;i<n;i++)
	{
		for(M=a[i][k]/a[k][k],j=k;j<n;j++)
			a[i][j]-=M*a[k][j];
		b[i]-=M*b[k];
	}
}
if (abs(a[n-1][n-1])==0)
	if(abs(b[n-1])==0)
		return -1;
	else return -2;
else
{
	for(i=n-1;i>=0;i--)
	{
		for(s=0,j=i+1;j<n;j++)
			s+=a[i][j]*x[j];
		x[i]=(b[i]-s)/a[i][i];
	}
return 0;
}
for(i=0;i<n;i++)
	delete [] a[i];
delete [] a;
delete [] b;
}

double sum(double* x,int n)
{
    double s=0;
    for (int i=0;i<n;i++)
        s += x[i];
    return s;
}

double sumproz(double* x,double* y,int n)
{
    double s=0;
    for (int i=0;i<n;i++)
        s += x[i]*y[i];
    return s;
}

double sum2(double* x,int n)
{
    double s=0;
    for (int i=0;i<n;i++)
        s += x[i]*x[i];
    return s;
}

int main()
{
    setlocale(LC_ALL,"Rus");
    int n;
    double *x,*y,*yl;
    double A,a,b,a1,a0;
    double r,Mx,My;

    cout << "Введите количество показаний\n";
    cin >> n;

    x = new double [n];
    y = new double [n];
    yl = new double [n];
    cout << "Введите значения s\n";
    for (int i=0; i<n; i++){
        cin >> x[i];}

    cout << "Введите соответствующие значения K(s)\n";
      for (int i=0; i<n; i++){
        cin >> y[i];}

    for (int i=0;i<n;i++)
        yl[i] = log(y[i]);

    a1 = (n*sumproz(x,y,n) - sum(x,n)*sum(y,n)) / (n*sum2(x,n) - sum(x,n)*sum(x,n));
    a0 = sum(y,n)/n - a1*sum(x,n)/n;

    // Коэффиценты      a,b - коэффиценты регрессии
    // y = a + bx - линия регрессии
    b = (n*sumproz(x,yl,n) - sum(x,n)*sum(yl,n)) / (n*sum2(x,n) - sum(x,n)*sum(x,n));
    A = sum(yl,n)/n - b*sum(x,n)/n;
    a = exp(A);

    Mx = sum(x,n)/n;
    My = sum(y,n)/n;

    for (int i=0;i<n;i++)
    {
        x[i]-=Mx;
        y[i]-=My;
    }
    // Коэффицент корреляции
    r = sumproz(x,y,n)/sqrt(sum2(x,n)*sum2(y,n));

    cout <<  "\n\nКоэффиценты регрессии: "<< a1 << " , " << a0 << "\n";
    cout << "Функция: K(s) = " << a << "*e^" << b << "s\n";
    cout << "Коэффицент корреляции: " << r;

    return 0;
}
